name: Deploy to Staging Environment

on:
  pull_request:
    branches:
      - staging  # Trigger workflow for pull requests to `staging`

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Linting
        run: |
          echo "Running Linting..."
          # Replace with your actual linting command, e.g., eslint
          echo "No linting errors found!"

  test_coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Test Coverage
        run: |
          echo "Running Test Coverage..."
          # Replace with your actual test command
          echo "Test coverage passed!"

  build_docker_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.ARTIFACT_REGISTRY_PASSWORD }}" | docker login -u "${{ secrets.ARTIFACT_REGISTRY_USERNAME }}" --password-stdin

      - name: Build and Tag Docker Image
        run: |
          docker build -t ${{ secrets.ARTIFACT_REGISTRY_URL }}/your-image-name:latest .

      - name: Push Docker Image to Registry
        run: |
          docker push ${{ secrets.ARTIFACT_REGISTRY_URL }}/your-image-name:latest

  # Skip Deployment for Now
  mock_deploy_to_staging:
    needs: [linting, test_coverage, build_docker_image]
    runs-on: ubuntu-latest
    steps:
      - name: Mock Deploy to Staging
        run: |
          echo "Simulating deployment to staging environment..."
          echo "Deployment step skipped."
